#version 450

layout (quads, equal_spacing, cw, point_mode) in;

in vec3 tcs_normal[];

vec3 object_color = vec3(0.0, 0.0, 1.0);
vec3 light_color = vec3(1.0, 1.0, 1.0);
vec3 light_position = vec3(0.0, 0.0, -5);
float light_intensity = 155.0;

uniform float anim_time;

out vec3 color;
out vec3 tes_normal;

mat4 model_view_matrix = mat4(
			      0.57735, -0.33333, 0.57735, 0.00000,
			      0.00000, 0.66667, 0.57735, 0.00000,
			      -0.57735, -0.33333, 0.57735, 0.00000,
			      0.00000, 0.00000, -17, 1.00000);
mat4 projection_matrix = mat4(
			      250.00000, 0.00000, 0.00000, 0.00000,
			      0.00000, 250.00000, 0.00000, 0.00000,
			      0.00000, 0.00000, -1.02020, -10.10101,
			      0.00000, 0.00000, -1.00000, 0.00000);



void main() {

    vec4 p1 = mix(gl_in[0].gl_Position, gl_in[1].gl_Position, gl_TessCoord.x);
    vec4 p2 = mix(gl_in[3].gl_Position, gl_in[2].gl_Position, gl_TessCoord.x);
	vec4 p = mix(p1, p2, gl_TessCoord.y);

	

    /*gl_Position = projection_matrix * model_view_matrix * (gl_TessCoord.x * gl_in[0].gl_Position +
				gl_TessCoord.y * gl_in[1].gl_Position +
				gl_TessCoord.z * gl_in[2].gl_Position);*/

	gl_Position = projection_matrix * model_view_matrix * p;
	
	

	color = object_color;
}